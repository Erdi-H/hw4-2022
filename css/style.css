html{
  scroll-behavior: smooth;
}

body{
  background-color: #737373;
  font-size: 18px;
  line-height: 1.15;
  margin: 0;
  padding: 0;
}


.overview{
  background-attachment: fixed; /* Parallax effect */     
  background-position: center;  /* Parallax effect */
  background-repeat: no-repeat; /* Parallax effect */
  background-size: cover;       /* Parallax effect */
  color: white;
  height: 400px;                /* Parallax effect */
}


.overview p{
  color: white;
  font-size: 24px;
  padding: 0 100px;
  text-align: center;
}

h1{
  font-size: 50px;
  line-height: 1;
  padding: 50px 0;
  text-align: center;
}

h2{
  font-size: 32px;
  line-height: 1.5;
}

nav li{
  display:inline;
  padding-right:20px;

}

nav a{
  color: black;
  font-weight: bold;
  text-decoration: none; 
}


.skip a{
  background: white;
  left: 0;
  padding: 6px;
  -webkit-transition: top 1s ease-out;
  transition: top 1s ease-out;
  z-index: 1;
}


nav{
  background-color: #ddd;
  padding: 25px 0; 
  text-align: left;
}

footer{
  background-color: black;
  color: white;
  padding-top: 30px;
  text-align: center;
}

.text-block{
  background-color: rgba(255, 255, 255);
  border: 10px solid black;
  padding: 30px;
}

/*.overview p, .overview h1 {
  background-color: black;
  background: transparent;
} */

@media screen and (prefers-reduced-motion: reduce){
  html{
      scroll-behavior: auto; /* Removes scroll animation */
  }

  .skip a{
    -webkit-transition: none; /* sets to default setting */
    transition: none;        /* sets to default setting */
   }

  /*Turn off parallax*/
  header{
    background-attachment: initial;
  }
}



/*Your Code Here*/
/* PLEASE DO NOT REMOVE MY COMMENTS.  THEY HELP US HELP YOU DEBUG. */

/* Step 1: Write selector/rule property to add an underline when
links in the navigation are in the hover or focus state.*/
nav li:hover, nav li:focus {
  text-decoration: underline;
}
/* Step 2a: Write selector/rule property to position the default position for the skip class element*/
.skip {
  position: absolute;
  top: -40px;
}
/* Step 2b: Write selector/rule property to position the skip class element when it is in focus*/
.skip a:focus {
  position: absolute;       
  top: 40px;
  background-color: #ddd;
  text-decoration: underline;
}

/* Step 3: Write selector/rule property to style all elements when in focus*/
*:focus {
  border-color: black;
  border-width: 2px;
  border-style: solid;
}

/* Step 4: Write selector/rule property to style the container */
@media screen and (max-width: 800px){

.container {
  display: grid;
  grid-template-columns: 1fr 5fr 1fr;
  grid-gap: 15px;
  overflow: hidden;
}


/* Step 5: Write selector/rule property to add the background image to the 
first div in the grid  and place it in the grid. */
.container div:first-child {
  position: relative;
  grid-column: 1 / -1;
  grid-row: 1;
  background-image: url("header.jpg");
  min-height: 500px;
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

/* Steps 6 and 7: Write the selector/rule properties to add place the next elements in the next
 four rows in the grid. */

/*This will be a lot of rules.... but be strategic and combine selectors*/
.about, .method, .clients, .contact {
  text-align: center;
}
.about {
  grid-column: 2 / 3;
  grid-row: 2;
  margin: 50px 0px 50px 0px;
}
.method {
  grid-column: 2 / 3;
  grid-row: 3;
  margin: 50px 0px 30px 0px;
}
.clients {
  grid-column: 2 / 3;
  grid-row: 4;
  margin: 50px 0px 50px 0px;
}
.contact {
  grid-column: 2 / 3;
  grid-row: 5;
  margin: 200px 0px 50px 0px;   /* fix this */
}
.about-image {
  grid-column: 1 / -1;
  max-height: 600px;
  grid-row: 2;
  text-overflow: hidden;
}
.method-image {
  grid-column: 1 / -1;
  max-height: 600px;
  grid-row: 3;
  text-overflow: hidden;
}
.clients-image {
  grid-column: 1 / -1;
  max-height: 600px;
  grid-row: 4;
  text-overflow: hidden;
}
.contact-image {
  grid-column: 1 / -1;
  max-height: 600px;
  grid-row: 5;
  text-overflow: hidden;
}
 /* Step 8: Write the selector/rule property to style the .text-block class. */
 .text-block {
  vertical-align: middle;
  margin-right: auto;
  margin-left: auto;
}
footer {
  margin: 0px;
  background-color: black;
  position: relative;
  width: 100%; 
  bottom: 0;
  height: 2.5rem;
} 
}
/* Add your media query here */
@media screen and (min-width: 800px){

  nav {
    text-align: right;
    padding: 30px 0px 30px 0px;
  }
  .container {
    display: grid;
    grid-template-columns: 5% 30% 30% 30% 5%;
    row-gap: 15px;
    overflow: hidden;
    justify-content: center;
    
  }
  
  /* Step 5: Write selector/rule property to add the background image to the 
  first div in the grid  and place it in the grid. */
  .container div:first-child {
    position: relative;
    grid-column: 1 / -1;
    grid-row: 1;
    background-image: url("header.jpg");
    min-height: 500px;
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
  }
  
  /* Steps 6 and 7: Write the selector/rule properties to add place the next elements in the next
   four rows in the grid. */
  
  /*This will be a lot of rules.... but be strategic and combine selectors*/
  .about, .method, .clients, .contact {
    text-align: center;
    vertical-align: center;
  }
  .about {
    grid-column: 3 / span 2;
    grid-row: 2;
    margin: 50px 0px 50px 0px;
    font-size: 16px;
  }
  .method {
    grid-column: 2 / span 2;
    grid-row: 3;
    margin: 50px 0px 30px 0px;
    font-size: 15px;
  }
  .clients {
    grid-column: 3 / span 2;
    grid-row: 4;
    margin: 50px 0px 50px 0px;
    font-size: 15px;
  }
  .contact {
    grid-column: 2 / span 2;
    grid-row: 5;
    margin: 50px 0px 50px 0px;   /* fix this */
  }
  .about-image {
    grid-column: 2 / span 2;
    grid-row: 2;
    text-overflow: hidden;
    max-width: 800px;
    max-height: 400px;
    overflow: clip;
  }
  .method-image {
    grid-column: 3 / span 2;
    grid-row: 3;
    text-overflow: hidden;
    max-width: 800px;
    max-height: 400px;
    overflow: clip;
  }
  .clients-image {
    grid-column: 2 / span 2;
    grid-row: 4;
    text-overflow: hidden;
    max-width: 800px;
    max-height: 400px;
    overflow: clip;
  }
  .contact-image {
    grid-column: 3 / span 2;
    grid-row: 5;
    text-overflow: hidden;
    max-width: 800px;
    max-height: 400px;
    overflow: clip;
  }
   /* Step 8: Write the selector/rule property to style the .text-block class. */
   .text-block {
    vertical-align: middle;
    max-height: 250px;
  }
  footer {
    margin: 0px;
    background-color: black;
    position: relative;
    width: 100%; 
    bottom: 0;
    height: 2.5rem;
  } 
  }